// Mocks generated by Mockito 5.0.17 from annotations
// in my_posts/test/data/repositories/user_post_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_posts/core/network/network_info.dart' as _i6;
import 'package:my_posts/data/datasources/user_post_local_data_source.dart'
    as _i3;
import 'package:my_posts/data/datasources/user_post_remote_data_source.dart'
    as _i5;
import 'package:my_posts/data/models/user_post_model.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserPostModel_0 extends _i1.Fake implements _i2.UserPostModel {}

/// A class which mocks [UserPostLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPostLocalDataSource extends _i1.Mock
    implements _i3.UserPostLocalDataSource {
  MockUserPostLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.UserPostModel>> getUserPost() =>
      (super.noSuchMethod(Invocation.method(#getUserPost, []),
              returnValue:
                  Future<List<_i2.UserPostModel>>.value(<_i2.UserPostModel>[]))
          as _i4.Future<List<_i2.UserPostModel>>);
  @override
  _i4.Future<_i2.UserPostModel> getUserPostById(int? id) => (super.noSuchMethod(
          Invocation.method(#getUserPostById, [id]),
          returnValue: Future<_i2.UserPostModel>.value(_FakeUserPostModel_0()))
      as _i4.Future<_i2.UserPostModel>);
  @override
  _i4.Future<void> deleteUserPostById(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteUserPostById, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.UserPostModel> addUserPost(_i2.UserPostModel? userPostModel) =>
      (super.noSuchMethod(Invocation.method(#addUserPost, [userPostModel]),
              returnValue:
                  Future<_i2.UserPostModel>.value(_FakeUserPostModel_0()))
          as _i4.Future<_i2.UserPostModel>);
  @override
  _i4.Future<_i2.UserPostModel> updateUserPost(
          _i2.UserPostModel? userPostModel) =>
      (super.noSuchMethod(Invocation.method(#updateUserPost, [userPostModel]),
              returnValue:
                  Future<_i2.UserPostModel>.value(_FakeUserPostModel_0()))
          as _i4.Future<_i2.UserPostModel>);
}

/// A class which mocks [UserPostRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserPostRemoteDataSource extends _i1.Mock
    implements _i5.UserPostRemoteDataSource {
  MockUserPostRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.UserPostModel>> getUserPost() =>
      (super.noSuchMethod(Invocation.method(#getUserPost, []),
              returnValue:
                  Future<List<_i2.UserPostModel>>.value(<_i2.UserPostModel>[]))
          as _i4.Future<List<_i2.UserPostModel>>);
  @override
  _i4.Future<_i2.UserPostModel> getUserPostById(int? id) => (super.noSuchMethod(
          Invocation.method(#getUserPostById, [id]),
          returnValue: Future<_i2.UserPostModel>.value(_FakeUserPostModel_0()))
      as _i4.Future<_i2.UserPostModel>);
  @override
  _i4.Future<void> deleteUserPostById(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteUserPostById, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.UserPostModel> addUserPost(_i2.UserPostModel? userPostModel) =>
      (super.noSuchMethod(Invocation.method(#addUserPost, [userPostModel]),
              returnValue:
                  Future<_i2.UserPostModel>.value(_FakeUserPostModel_0()))
          as _i4.Future<_i2.UserPostModel>);
  @override
  _i4.Future<_i2.UserPostModel> updateUserPost(
          _i2.UserPostModel? userPostModel) =>
      (super.noSuchMethod(Invocation.method(#updateUserPost, [userPostModel]),
              returnValue:
                  Future<_i2.UserPostModel>.value(_FakeUserPostModel_0()))
          as _i4.Future<_i2.UserPostModel>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
